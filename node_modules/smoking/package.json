{
  "name": "smoking",
  "description": "Smoking: Simple Mocking and Stubbing for javascript",
  "version": "0.0.3",
  "author": {
    "name": "elCuervo",
    "email": "elcuervo@elcuervo.co"
  },
  "keywords": [
    "tdd",
    "testing",
    "smoking",
    "mock",
    "stub",
    "simple"
  ],
  "directories": {
    "lib": "./lib",
    "test": "./test"
  },
  "devDependencies": {
    "gerbil": "*"
  },
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/elcuervo/smoking.git"
    }
  ],
  "main": "./lib/smoking.js",
  "scripts": {
    "test": "node test/stub_and_mock.js"
  },
  "readme": "# Smoking\nSimple Mocks and Stubs for javascript.\n\n[![Build Status](https://secure.travis-ci.org/elcuervo/smoking.png?branch=master)](http://travis-ci.org/elcuervo/smoking)\n\n![Smock](http://www.omerique.net/polavide/rec_polavide0708/edilim/hie_hue_hui_hum/misrecursos/humo.gif)\n\n```bash\n$ npm install smoking\n```\n\nOr add it to your script tag\n\n```html\nhttps://raw.github.com/elcuervo/smoking/master/lib/smoking.js\n```\n\n## Stubbing\n\nThe idea is to provide simple mocking and stubbing to normal objects, no API, no\ndependencies.\n\n### Example\n\n```javascript\nvar Fruit = function(color) {\n  this.color = color;\n  this.healthy = 'yes';\n};\n\nFruit.prototype = {\n  cutInPieces: function() {\n    return Math.floor(Math.random()*11);\n  }\n};\n\nvar redFruit = new Fruit('red');\n\nredFruit.color;\n// 'red'\nredFruit.healthy;\n// 'yes'\nredFruit.cutInPieces();\n// 5\n\nvar stubbedRedFruit = smoking(redFruit, { healthy: 'a bit' });\n\nstubbedRedFruit.healthy;\n// 'a bit'\nstubbedRedFruit.color;\n// 'red'\nstubbedRedFruit.cutInPieces();\n// 2\nredFruit.healthy;\n// 'yes'\n// You get the point\n```\n\n### Another\n\n```javascript\nvar uberChangedFruit = smoking(redFruit, {\n  color: 'blue',\n  cutInPieces: function() {\n    return 7;\n  }\n});\n\nuberChangedFruit.color;\n// 'blue'\nuberChangedFruit.cutInPieces();\n// 7\nuberChangedFruit.healthy;\n// 'yes'\n```\n\n## Mocking\n\nYou can easily verify the call of methods.\n\n```javascript\nvar mockFruit = smoking(redFruit).expects({ cutInPieces: 1 });\nmockFruit.cutInPieces();\nsmoking(mockFruit).verify();\n```\n\nOr with a shorthand if it's just one method and needs to be called once\n\n```javascript\nvar mockFruit = smoking(redFruit).expects('cutInPieces');\nsmoking(mockFruit).verify();\n```\n\nThe prior example will fail with a RangeError because the 'cutInPieces' methods\ndoes not get called.\n\n## Name\nIt's a [foca](http://github.com/foca)'s idea :D.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/elcuervo/smoking.git"
  },
  "bugs": {
    "url": "https://github.com/elcuervo/smoking/issues"
  },
  "homepage": "https://github.com/elcuervo/smoking",
  "_id": "smoking@0.0.3",
  "dist": {
    "shasum": "5ef18ce81caf678a06fd13b7cc05599d37afc382"
  },
  "_from": "smoking@*",
  "_resolved": "https://registry.npmjs.org/smoking/-/smoking-0.0.3.tgz"
}
